{"code":"#include <bits\/stdc++.h>\r\n#define INF 1000000\r\nusing namespace std;\r\nbool P[INF];\r\nlist < int > adj[INF];\r\nstring solve()\r\n{\r\n    int n, k, v;\r\n    scanf(\"%d%d\",&n,&k);\r\n    int count = 0;\r\n    int root = -1;\r\n    for (int i = 1; i <= n; i++) {\r\n        scanf(\"%d\", &v);\r\n        if (v != -1) {\r\n            adj[v].push_back(i);\r\n        }\r\n        else {\r\n            count++;\r\n            root = i;\r\n        }\r\n    }\r\n    if (count != 1) return \"no\";\r\n\r\n    list < int > mp1;\r\n    mp1.push_back(root);\r\n    bool key = true;\r\n    while (key) {\r\n        list < int > mp2;\r\n        key = false;\r\n        for (auto it=mp1.begin(); it!=mp1.end(); it++) {\r\n            int tt = adj[*it].size();\r\n            if (!P[*it] && tt > 0) {\r\n                key = true;\r\n                for (auto u : adj[*it]) {\r\n                    mp2.push_back(u);\r\n                }\r\n            }\r\n            P[*it] = true;\r\n        }\r\n        if (key == false) break;\r\n        int x = mp1.size();\r\n        int y = mp2.size();\r\n        if (x >= y || y-x>k) return \"no\";\r\n        mp1.swap(mp2);\r\n        mp2.clear();\r\n    }\r\n    for (int i = 1; i <= n; i++) {\r\n        if (P[i] == false) {\r\n            return \"no\";\r\n        }\r\n    }\r\n    return \"yes\";\r\n}\r\nint main()\r\n{\r\n    int t = 1;\r\n    while (t--) {\r\n        cout << solve() << endl;\r\n    }\r\n    return 0;\r\n}\r\n\r\n\/\/ 1 2 3 4 5 6\r\n\/\/-1 1 1 1 1 10","lang":4}