{"code":"#include <bits\/stdc++.h>\r\nusing namespace std;\r\n\r\nbool is_magic_square(vector<int> v)\r\n{\r\n    int a[3][3];\r\n\r\n    for (int i = 0; i < 3; ++i)\r\n        for (int j = 0; j < 3; ++j)\r\n            a[i][j] = v[3 * i + j];\r\n\r\n    int s = 0;\r\n    for (int j = 0; j < 3; ++j)\r\n        s += a[0][j];\r\n\r\n    for (int i = 1; i <= 2; ++i) {\r\n        int tmp = 0;\r\n        for (int j = 0; j < 3; ++j)\r\n            tmp += a[i][j];\r\n        if (tmp != s)\r\n            return 0;\r\n    }\r\n\r\n    for (int j = 0; j < 3; ++j) {\r\n        int tmp = 0;\r\n        for (int i = 0; i < 3; ++i)\r\n            tmp += a[i][j];\r\n        if (tmp != s)\r\n            return 0;\r\n    }\r\n\r\n    int tmp = 0;\r\n    for (int i = 0; i < 3; ++i)\r\n        tmp += a[i][i];\r\n    if (tmp != s)\r\n        return 0;\r\n\r\n    tmp = 0;\r\n    for (int i = 0; i < 3; ++i)\r\n        tmp += a[2 - i][i];\r\n    if (tmp != s)\r\n        return 0;\r\n    return 1;\r\n}\r\n\r\nvoid find_magic_squares(vector<vector<int> >& magic_squares)\r\n{\r\n    vector<int> v(9);\r\n\r\n    for (int i = 0; i < 9; ++i)\r\n        v[i] = i + 1;\r\n\r\n    do {\r\n        if (is_magic_square(v)) {\r\n            magic_squares.push_back(v);\r\n        }\r\n    } while (next_permutation(v.begin(), v.end()));\r\n}\r\n\r\nint diff(vector<int> a, vector<int> b)\r\n{\r\n    int res = 0;\r\n\r\n    for (int i = 0; i < 9; ++i)\r\n        res += abs(a[i] - b[i]);\r\n\r\n    return res;\r\n}\r\n\r\nint wrapper(vector<int> v)\r\n{\r\n    int res = INT_MAX;\r\n    vector<vector<int> > magic_squares;\r\n\r\n    find_magic_squares(magic_squares);\r\n\r\n    for (int i = 0; i < magic_squares.size(); ++i) {\r\n\r\n        res = min(res, diff(v, magic_squares[i]));\r\n    }\r\n    return res;\r\n}\r\n\r\nint main()\r\n{\r\n    vector<int> v;\r\n    int a;\r\n    for (int i=0; i<3; i++){\r\n        for (int j=0; j<3; j++){\r\n            cin >> a;\r\n            v.push_back(a);\r\n        }\r\n    }\r\n\r\n    cout << wrapper(v) << endl;\r\n\r\n    return 0;\r\n}","lang":4}