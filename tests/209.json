{"code":"import sys\r\nsys.setrecursionlimit(10**9)\r\n\r\nglobal queue1;\r\nqueue1 = []\r\n\r\ndef BFS(vesit, u, v, adj, queue, key):\r\n\r\n\tvesit[u] = False\r\n\tfor x in adj[u]:\r\n\t\tif x == v and key == True:\r\n\t\t\tglobal queue1;\r\n\t\t\tqueue1, key = queue + [u], False\r\n\t\tif vesit[x] and key == True:\r\n\t\t\tqueue.append(u)\r\n\t\t\tBFS(vesit, x, v, adj, queue, key)\r\n\t\t\tif len(queue) > 0:\r\n\t\t\t\tqueue.pop(-1)\r\n\r\ndef LabirintSolve(n, m):\r\n\t\r\n\tM = [[x for x in input()] for x in range(n)]\r\n\t\r\n\ta1, a2, dic = [], [], dict()\r\n\ti1, i2, w = '$', '$$', ' AB'\r\n\ti3, i4, py = 'AB', '$AB', 0\r\n\r\n\tfor i in range(n):\r\n\t\tfor j in range(m):\r\n\t\t\tif 0 < j and j < m-1:\r\n\t\t\t\tif M[i][j] in i3:\r\n\t\t\t\t\tdic[(i, j)] = py\r\n\t\t\t\t\ta1.append((i, j))\r\n\t\t\t\t\ta2.append((i, j))\r\n\t\t\t\telif (\r\n\t\t\t\t\tM[i][j-1] in w and \r\n\t\t\t\t\tM[i][j] in w and \r\n\t\t\t\t\tM[i][j+1] in w\r\n\t\t\t\t\t):\r\n\t\t\t\t\tdic[(i, j)] = py\r\n\t\t\t\t\ta1.append((i, j))\r\n\t\t\t\telse:\r\n\t\t\t\t\tdic[(i, j)] = py\r\n\t\t\t\t\ta1.append(())\r\n\t\t\telse:\r\n\t\t\t\tdic[(i, j)] = py\r\n\t\t\t\ta1.append(())\r\n\t\t\tpy += 1\r\n\tadj = [[] for x in range(n*m)]\r\n\tfor i in range(n):\r\n\t\tfor j in range(m):\r\n\t\t\tif i+1<n and j+1<m:\r\n\t\t\t\tu1 = dic[(i,j)]\r\n\t\t\t\tv1 = dic[(i,j+1)]\r\n\t\t\t\tv2 = dic[(i+1,j)]\r\n\t\t\t\tif a1[u1] and a1[v1]:\r\n\t\t\t\t\tadj[u1].append(v1)\r\n\t\t\t\t\tadj[v1].append(u1)\r\n\t\t\t\tif a1[u1] and a1[v2]:\r\n\t\t\t\t\tadj[u1].append(v2)\r\n\t\t\t\t\tadj[v2].append(u1)\r\n\t\r\n\tvesit, queue = (n * m) * [True], []\r\n\tu, v = dic[a2[0]], dic[a2[1]]\r\n\t\r\n\tBFS(vesit, u, v, adj, queue, True)\r\n\tqueue1.pop(0)\r\n\t\r\n\tfor i in queue1: \r\n\t\tM[a1[i][0]][a1[i][1]] = \"$\"\r\n\tfor i in range(n):\r\n\t\tw = ''\r\n\t\tfor j in range(m):\r\n\t\t\tif M[i][j] == \"$\":\r\n\t\t\t\tif (j>1 and j+2<m and i>1 and i+2<n):\r\n\t\t\t\t\tif M[i][j-1]==i1 and M[i][j-2] in i3: \r\n\t\t\t\t\t\tw += chr(9590);\r\n\t\t\t\t\telif M[i][j+1]==i1 and M[i][j+2] in i3:\r\n\t\t\t\t\t\tw += chr(9588);\r\n\t\t\t\t\telif M[i][j+1]+M[i+1][j]==i2: \r\n\t\t\t\t\t\tw += chr(9484)\r\n\t\t\t\t\telif M[i][j-1]+M[i+1][j]==i2: \r\n\t\t\t\t\t\tw += chr(9488)\r\n\t\t\t\t\telif M[i-1][j]+M[i][j+1]==i2: \r\n\t\t\t\t\t\tw += chr(9492)\r\n\t\t\t\t\telif M[i-1][j]+M[i][j-1]==i2: \r\n\t\t\t\t\t\tw += chr(9496)\r\n\t\t\t\t\telif M[i][j-1]+M[i][j+1]==i2: \r\n\t\t\t\t\t\tw += chr(9472)\r\n\t\t\t\t\telif M[i-1][j]+M[i+1][j]==i2: \r\n\t\t\t\t\t\tw += chr(9474)\r\n\t\t\t\t\telif M[i-1][j]==i1 and M[i+1][j] in i3: \r\n\t\t\t\t\t\tw += chr(9589)\r\n\t\t\t\t\telif M[i-1][j] in i3 and M[i+1][j] in i1: \r\n\t\t\t\t\t\tw += chr(9591)\r\n\t\t\t\t\telif M[i][j-1] in i4 and M[i][j+1] in i4: \r\n\t\t\t\t\t\tw += chr(32)\r\n\t\t\t\telif M[i][j+1]==i1 and M[i][j+2] in i3: \r\n\t\t\t\t\tw += chr(9588);\r\n\t\t\t\telif M[i][j-1]==i1 and M[i][j-2] in i3: \r\n\t\t\t\t\tw += chr(9590);\r\n\t\t\t\telif M[i][j+1]+M[i+1][j]==i2: \r\n\t\t\t\t\tw += chr(9484)\r\n\t\t\t\telif M[i][j-1]+M[i+1][j]==i2: \r\n\t\t\t\t\tw += chr(9488)\r\n\t\t\t\telif M[i-1][j]+M[i][j+1]==i2: \r\n\t\t\t\t\tw += chr(9492)\r\n\t\t\t\telif M[i-1][j]+M[i][j-1]==i2: \r\n\t\t\t\t\tw += chr(9496)\r\n\t\t\t\telif M[i][j-1]+M[i][j+1]==i2: \r\n\t\t\t\t\tw += chr(9472)\r\n\t\t\t\telif M[i-1][j]+M[i+1][j]==i2: \r\n\t\t\t\t\tw += chr(9474)\r\n\t\t\t\telif M[i][j-1] in i4 and M[i][j+1] in i4: \r\n\t\t\t\t\tw += chr(32)\r\n\t\t\telse: w += M[i][j]\r\n\t\tprint(w)\r\n\r\nn, m = map(int,input().split())\r\nLabirintSolve(2*n+1,4*m+1)","lang":2}