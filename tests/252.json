{"code":"def count_even(digit, num_zeroes):\r\n    return (10**num_zeroes * digit  # count all numbers \r\n        # exclude numbers with fewer digits and only odd digits:\r\n        - ((5**(num_zeroes+1)-1)\/\/4-1)   \r\n        # exclude numbers with same digit count and only odd digits, \r\n        #  but with first digit less than given digit,\r\n        - 5**num_zeroes * (digit\/\/2)\r\n        # ...and exclude 0\r\n        - 1\r\n    )\r\n\r\n# The main algorithm\r\ndef get_nth_with_even_digit(n):\r\n    # Base cases\r\n    if n < 10: \r\n        return n * 2  # 2, 4, 6, ..., 18\r\n    if n < 20:\r\n        return 10 + n  # 20 - 29\r\n\r\n    # Use recursion to build on previous results:\r\n    num_zeroes = 1\r\n    while True:\r\n        diff = count_even(3, num_zeroes) - count_even(1, num_zeroes)\r\n        num_zeroes += 1\r\n        power = 10**num_zeroes\r\n        limit = 1 + count_even(2, num_zeroes)\r\n        if n < limit:\r\n            return power\/\/5 + get_nth_with_even_digit(n - diff)\r\n        if n < limit + power:\r\n            return n + power\/\/5 + get_nth_with_even_digit(limit - diff) - limit\r\nprint(get_nth_with_even_digit(int(input())))","lang":2}