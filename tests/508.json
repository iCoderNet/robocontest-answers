{"code":"#include<bits\/stdc++.h>\r\nusing namespace std;\r\n\r\nvoid update(int BIT[], int n, int i, int val)\r\n{\r\n\tfor (; i <= n; i += (i & -i)) {\r\n\t\tBIT[i] += val;\r\n\t}\r\n}\r\nint query(int BIT[], int i)\r\n{\r\n\tint sum = 0;\r\n\tfor (; i > 0; i -= (i & -i)) {\r\n\t\tsum += BIT[i];\r\n\t}\r\n\treturn sum;\r\n}\r\nvoid Convert(int arr[], int n)\r\n{\r\n\tint temp[n];\r\n\tfor (int i = 0; i < n; i++) {\r\n\t\ttemp[i] = arr[i];\r\n\t}\r\n\tsort(temp, temp + n);\r\n\r\n\tfor (int i = 0; i < n; i++) {\r\n\tarr[i] = lower_bound(temp, temp + n, arr[i]) - temp + 1;\r\n\t}\r\n}\r\n\r\nint getCount(int arr[], int n)\r\n{\r\n\tConvert(arr, n);\r\n\r\n\tint BIT[n + 1] = { 0 };\r\n\tint smaller_right[n + 1] = { 0 };\r\n\tint greater_left[n + 1] = { 0 };\r\n\r\n\tfor (int i = n - 1; i >= 0; i--) {\r\n\t\tsmaller_right[i] = query(BIT, arr[i]-1);\r\n\t\tupdate(BIT, n, arr[i], 1);\r\n\t}\r\n\r\n\tfor (int i = 0; i <= n; i++) {\r\n\t\tBIT[i] = 0;\r\n\t}\r\n\r\n\tfor (int i = 0; i < n; i++) {\r\n\t\tgreater_left[i] = i - query(BIT, arr[i]);\r\n\t\tupdate(BIT, n, arr[i], 1);\r\n\t}\r\n\tint ans = 0;\r\n\tfor (int i = 0; i < n; i++) {\r\n\t\tans += greater_left[i] * smaller_right[i];\r\n\t}\r\n\r\n\treturn ans;\r\n}\r\n\r\nint main()\r\n{\r\n    int n;\r\n    cin >> n;\r\n    int arr[n];\r\n    for (int i = 0; i < n; i++) {\r\n        scanf(\"%d\", &arr[i]);\r\n    }\r\n\r\n\tcout << getCount(arr, n) << endl;\r\n\r\n\treturn 0;\r\n}","lang":4}