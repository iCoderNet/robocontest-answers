{"code":"#include <bits\/stdc++.h>\r\n#define MAX_PRIME 100000\r\n#define MAX 20000\r\n\r\nusing namespace std;\r\n\r\nint prim[MAX];\r\nbool prime[MAX_PRIME + 1] = {false};\r\n\r\nvoid SieveOfEratosthenes(int & LEN)\r\n{\r\n\tfor (int p = 2; p * p <= MAX_PRIME; p++) {\r\n\r\n\t\tif (!prime[p]) {\r\n\t\t\tfor (int i = p * p; i <= MAX_PRIME; i += p)\r\n\t\t\t\tprime[i] = true;\r\n\t\t}\r\n\t}\r\n\r\n\tfor (int p = 3; p <= MAX_PRIME; p++) {\r\n\t\tif (!prime[p]) {\r\n\t\t\tprim[LEN++] = p;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nbool isprime(int n, int LEN) {\r\n    for (int i = 0; i < LEN && n > prim[i]; i++) {\r\n        if (n % prim[i] == 0) {\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n}\r\n\r\nint isfront(int n, int m) {\r\n    if (n < 4 && m > 4)\r\n        return 1;\r\n    return 0;\r\n}\r\n\r\nint solve()\r\n{\r\n    int LEN = 0;\r\n    SieveOfEratosthenes(LEN);\r\n\r\n    int n, m;\r\n    cin >> n >> m;\r\n\r\n    int k = isfront(n, m);\r\n    int curr = n \/ 6 + 1;\r\n\r\n    if (6 * curr + 1 > m) return k;\r\n\r\n    if (m % 6 == 0) m = (m \/ 6 - 1);\r\n    else m = (m \/ 6);\r\n\r\n    for (int i = curr; i <= m; i++) {\r\n        if (isprime(6 * i - 1, LEN)) {\r\n            if (isprime(6 * i + 1, LEN)) {\r\n                k++;\r\n            }\r\n        }\r\n    }\r\n\r\n    return k;\r\n}\r\n\r\nint main()\r\n{\r\n\r\n    int t = 1;\r\n    while (t--) {\r\n        cout << solve() << '\\n';\r\n    }\r\n\r\n    return 0;\r\n}","lang":4}