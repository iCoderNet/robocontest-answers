{"code":"#include <bits\/stdc++.h>\r\nusing namespace std;\r\n\r\nlong long dp[18][2][162];\r\n\r\nlong long solve(int i, bool tight, int sum_so_far, int Sum, string number, int len)\r\n{\r\n\tif (i == len) {\r\n\r\n\t\tif (sum_so_far == Sum)\r\n\t\t\treturn 1;\r\n\t\telse\r\n\t\t\treturn 0;\r\n\t}\r\n\r\n\tlong long& ans = dp[i][tight][sum_so_far];\r\n\tif (ans != -1) {\r\n\t\treturn ans;\r\n\t}\r\n\r\n\tans = 0;\r\n\tbool ntight;\r\n\tint nsum_so_far;\r\n\tfor (char currdigit = '0'; currdigit <= '9'; currdigit++) {\r\n\r\n\t\tif (!tight && currdigit > number[i]) {\r\n\t\t\tbreak;\r\n\t\t}\r\n\r\n\t\tntight = tight || currdigit < number[i];\r\n\t\tnsum_so_far = sum_so_far + (currdigit - '0');\r\n\t\tans += solve(i + 1, ntight, nsum_so_far, Sum, number, len);\r\n\t}\r\n\r\n\treturn ans;\r\n}\r\n\r\nbool isnumber(string s, long long n) {\r\n    long long ans = 0;\r\n    for (int i = 0; i < s.length(); i++) {\r\n        ans = ans + (s[i] - 48);\r\n    }\r\n    if (ans == n)\r\n        return true;\r\n    return false;\r\n}\r\n\r\nint main()\r\n{\r\n    string L, R;\r\n    cin >> L >> R;\r\n    long long sum;\r\n    cin >> sum;\r\n\r\n\tlong long count = 0;\r\n\tmemset(dp, -1, sizeof dp);\r\n\tlong long s1 = solve(0, 0, 0, sum, L, L.size());\r\n\t\/\/cout << s1 << ' ';\r\n\tcount = 0;\r\n\tmemset(dp, -1, sizeof dp);\r\n\tlong long s2 = solve(0, 0, 0, sum, R, R.size());\r\n\t\/\/cout << s2 << ' ';\r\n\tif (isnumber(L, sum)) {\r\n        cout << s2 - s1 + 1;\r\n\t}\r\n\telse {\r\n        cout << s2 - s1;\r\n\t}\r\n\r\n\treturn 0;\r\n}","lang":4}