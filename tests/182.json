{"code":"#include <math.h>\r\n\r\n#include <stdio.h>\r\n\r\n#include <string.h>\r\n\r\n#include <stdlib.h>\r\n\r\n#include <assert.h>\r\n\r\n#include <limits.h>\r\n\r\n#include <stdbool.h>\r\n\r\n \r\n\r\n#define MAXN 1200\r\n\r\n#define MOD 1000000007\r\n\r\n \r\n\r\nint M[MAXN];\r\n\r\nlong dp[MAXN+1][MAXN+1];\r\n\r\nlong fact[MAXN+1];\r\n\r\nlong combination[MAXN+1][MAXN+1];\r\n\r\n \r\n\r\nvoid cal_factor() {\r\n\r\n    long v = 1;\r\n\r\n    fact[0] = 1;\r\n\r\n    for (int i=1; i<=MAXN; ++i)\r\n\r\n    {\r\n\r\n        fact[i] = v = (v * i) % MOD;\r\n\r\n    }\r\n\r\n}\r\n\r\n \r\n\r\nlong cal_combi(int n, int m) {\r\n\r\n    if (combination[n][m] >= 0) { return combination[n][m]; }\r\n\r\n    if (n < m) { return 0; }\r\n\r\n    if (m == 0)\r\n\r\n    {\r\n\r\n        combination[n][m] = 1;\r\n\r\n    }\r\n\r\n    else\r\n\r\n    {\r\n\r\n        combination[n][m] =\r\n\r\n            (cal_combi(n-1, m-1) + cal_combi(n-1, m)) % MOD;\r\n\r\n    }\r\n\r\n \r\n\r\n    return combination[n][m];\r\n\r\n}\r\n\r\n \r\n\r\nint main()\r\n\r\n{\r\n\r\n    int n; scanf(\"%d\", &n);\r\n\r\n    for (int i=0; i<n; ++i)\r\n\r\n    {\r\n\r\n        scanf(\"%d\", &M[i]);\r\n\r\n    }\r\n\r\n    memset(dp, 0, sizeof(dp));\r\n\r\n    memset(combination, -1, sizeof(combination));\r\n\r\n    cal_factor();\r\n\r\n    dp[n][0] = 1;\r\n\r\n \r\n\r\n    for (int i=n-1; i>=0; --i)\r\n\r\n    {\r\n\r\n        int mx = 0, last = -1;\r\n\r\n        for (int j=i; j<n; ++j)\r\n\r\n        {\r\n\r\n            if (M[j] <= last)\r\n\r\n            {\r\n\r\n                break;\r\n\r\n            }\r\n\r\n            last = M[j];\r\n\r\n            ++mx;\r\n\r\n        }\r\n\r\n \r\n\r\n        for (int j=1; j<=mx; ++j)\r\n\r\n        {\r\n\r\n            for (int k=0; k<=j; ++k)\r\n\r\n            {\r\n\r\n                long c = cal_combi(j, k);\r\n\r\n                long tmp = (((fact[k]*c) % MOD)*dp[i+j][k]) % MOD;\r\n\r\n                dp[i][j] = (dp[i][j] + tmp) % MOD;\r\n\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n \r\n\r\n    long ans = 0;\r\n\r\n    for (int i=1; i<=n; ++i)\r\n\r\n    {\r\n\r\n        ans = (ans + dp[0][i]) % MOD;\r\n\r\n    }\r\n\r\n    printf(\"%ld\\n\", ans);\r\n\r\n    return 0;\r\n\r\n}","lang":4}