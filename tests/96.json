{"code":"#include <bits\/stdc++.h>\r\nusing namespace std;\r\n#define GET_MACRO(_1, _2, _3, NAME, ...) NAME\r\n#define _repl(i,a,b) for(int i=(int)(a);i<(int)(b);i++)\r\n#define _rep(i,n) _repl(i,0,n)\r\n#define rep(...) GET_MACRO(__VA_ARGS__, _repl, _rep)(__VA_ARGS__)\r\n#define mp(a,b) make_pair((a),(b))\r\n#define pb(a) push_back((a))\r\n#define all(x) (x).begin(),(x).end()\r\n#define uniq(x) sort(all(x)),(x).erase(unique(all(x)),end(x))\r\n#define fi first\r\n#define se second\r\n#define dbg(...) _dbg(#__VA_ARGS__, __VA_ARGS__)\r\nvoid _dbg(string){cout<<endl;}\r\ntemplate<class H,class... T> void _dbg(string s,H h,T... t){int l=s.find(',');cout<<s.substr(0,l)<<\" = \"<<h<<\", \";_dbg(s.substr(l+1),t...);}\r\ntemplate<class T,class U> ostream& operator<<(ostream &o, const pair<T,U> &p){o<<\"(\"<<p.fi<<\",\"<<p.se<<\")\";return o;}\r\ntemplate<class T> ostream& operator<<(ostream &o, const vector<T> &v){o<<\"[\";for(T t:v){o<<t<<\",\";}o<<\"]\";return o;}\r\n#define INF 1120000000\r\n#define MOD 1000000007\r\n#define long long long\r\ntemplate<typename T>\r\nclass BIT\r\n{\r\n\tprivate:\r\n  \t\tvector<T> bit;\r\n  \t\tint n;\r\n\t\tpublic:\r\n  \t\t\tBIT(int _n) : n(_n)\r\n\t\t\t{\r\n    \t\t\tbit = vector<T>(n+1, 0);\r\n  \t\t\t}\r\nvoid add(int v, T a)\r\n{\r\n    for(int x=v+1; x<=n; x += x&(-x)) bit[x] += a;\r\n}\r\n    T sum(int v)\r\n\t{\r\n    \tT ret=0;\r\n    \tfor(int x=v+1; x>0; x -= x&(-x)) ret += bit[x];\r\n    \treturn ret;\r\n  \t}\r\n};\r\nint a[300005];\r\nbool appear[300005];\r\nlong fact[300005];\r\nint main()\r\n{\r\n  \tint n;\r\n  \tscanf(\"%d\", &n);\r\n  \trep(i,n) scanf(\"%d\", a+i);\r\n  \tfill(appear, appear+n+1, false);\r\n \trep(i,n) appear[a[i]] = true;\r\n  \tvector<int> b;\r\n  \trep(i,1,n+1) if(!appear[i]) b.pb(i);\r\n  \tfact[0] = 1;\r\n  \trep(i,n) fact[i+1] = (i+1)*fact[i] %MOD;\r\n  \tlong m = b.size();\r\n  \tlong sumb = 0;\r\n  \tfor(auto x : b) sumb += x-1;\r\n  \tsumb %= MOD;\r\n  \tBIT<int> bit(n+1);\r\n  \tlong ans = fact[m];\r\n  \tlong k = 0;\r\n  \tlong pre = 0;\r\n  \trep(i,n)\r\n\t{\r\n    \tif(a[i]==0)\r\n\t\t{\r\n      \t\tlong tmp = sumb * fact[m-1] %MOD\r\n                - pre * fact[m-1] %MOD\r\n                - ((m>=2) ? (m*(m-1)\/2 %MOD * fact[m-2] %MOD * k %MOD) : (0));\r\n\r\n      \tans = (ans + tmp*fact[n-i-1]) %MOD;\r\n      \tk++;\r\n    \t}\r\n    \telse\r\n\t\t{\r\n      \t\tlong tmp = (a[i]-1) * fact[m] %MOD\r\n                - bit.sum(a[i]) * fact[m] %MOD\r\n                - ((m>=1) ? ((long)(lower_bound(all(b), a[i]) - b.begin()) * k %MOD * fact[m-1] %MOD) : (0));\r\n      \tans = (ans + tmp*fact[n-i-1]) %MOD;\r\n      \tbit.add(a[i], 1);\r\n      \tpre = (pre + b.end() - lower_bound(all(b), a[i])) %MOD;\r\n    \t}\r\n \t}\r\n  \tans %= MOD;\r\n  \tif(ans < 0) ans += MOD;\r\n  \tcout << ans << '\\n';\r\n  \treturn 0;\r\n}","lang":4}