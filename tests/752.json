{"code":"\/*\r\n\u2588\u2588    \u2588\u2588  \u2588\u2588\u2588\u2588\u2588\u2588  \u2588\u2588\u2588\u2588\u2588\u2588  \u2588\u2588   \u2588\u2588\r\n\u2588\u2588\u2588  \u2588\u2588\u2588  \u2588\u2588        \u2588\u2588     \u2588\u2588 \u2588\u2588\r\n\u2588\u2588 \u2588\u2588 \u2588\u2588  \u2588\u2588        \u2588\u2588      \u2588\u2588\r\n\u2588\u2588    \u2588\u2588  \u2588\u2588        \u2588\u2588      \u2588\u2588\r\n\r\n  \u2588\u2588\u2588\u2588  \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588     \u2588\u2588      \u2588\u2588   \u2588\u2588  \u2588\u2588  \u2588\u2588  \u2588\u2588\u2588\u2588\u2588\u2588  \u2588\u2588   \u2588\u2588\r\n \u2588\u2588        \u2588\u2588       \u2588\u2588\u2588\u2588     \u2588\u2588   \u2588\u2588  \u2588\u2588 \u2588\u2588   \u2588\u2588      \u2588\u2588   \u2588\u2588\r\n \u2588\u2588        \u2588\u2588      \u2588\u2588  \u2588\u2588    \u2588\u2588\u2588\u2588\u2588\u2588\u2588  \u2588\u2588\u2588\u2588    \u2588\u2588\u2588\u2588    \u2588\u2588\u2588\u2588\u2588\u2588\u2588\r\n \u2588\u2588        \u2588\u2588     \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588   \u2588\u2588   \u2588\u2588  \u2588\u2588 \u2588\u2588   \u2588\u2588      \u2588\u2588   \u2588\u2588\r\n  \u2588\u2588\u2588\u2588     \u2588\u2588    \u2588\u2588\u2588    \u2588\u2588\u2588  \u2588\u2588   \u2588\u2588  \u2588\u2588  \u2588\u2588  \u2588\u2588\u2588\u2588\u2588\u2588  \u2588\u2588   \u2588\u2588\r\n*\/\r\n#include<bits\/stdc++.h>\r\nusing namespace std;\r\n#define mx 1000\r\nstring s, c, dp[mx];\r\nstring solve(string a) {\r\n    int n = a.size();\r\n    string res = \"\";\r\n    for (int i = 0; i < n\/2; i++) {\r\n        res += a[i];\r\n        res += a[n-i-1];\r\n    }\r\n    if (n & 1) res += a[int(n\/2)];\r\n    return res;\r\n}\r\nint main() {\r\n\r\n    ios_base::sync_with_stdio( 0 );\r\n    cin.tie(NULL);\r\n    cout.tie(NULL);\r\n    int t = 1;\r\n    \/\/cin >> t;\r\n    while (t--) {\r\n        int n, m = 0;\r\n        cin >> n >> s;\r\n        c = solve(s);\r\n        dp[m++] = c;\r\n        while (s != c) {\r\n            c = solve(c);\r\n            dp[m++] = c;\r\n        }\r\n        cout << dp[m - n % m - 1] << endl;\r\n    }\r\n\r\n  return 0;\r\n}","lang":4}