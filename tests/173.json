{"code":"#include <bits\/stdc++.h>\r\n#define INF 100001\r\nusing namespace std;\r\n\r\nbool vist[INF];\r\nvector<int>adj[INF];\r\nint dp[INF];\r\nint maxD = -1, maxNode = -1 ;\r\n\r\nvoid DFS(int node , int d )\r\n{\r\n    vist[node] = true;\r\n\r\n    if(d > maxD)  {\r\n        maxNode = node;\r\n        maxD = d ;\r\n    }\r\n    for (auto x : adj[node] ) {\r\n        if(vist[x] == false) {\r\n            DFS(x , d+1);\r\n        }\r\n    }\r\n}\r\n\r\nvoid null(int n) {\r\n\r\n    for (int i = 0; i < n; i++) {\r\n        vist[i] = false;\r\n    }\r\n}\r\n\r\nvoid add(int u, int v) {\r\n\r\n    adj[u].push_back(v);\r\n    adj[v].push_back(u);\r\n}\r\n\r\nint diametir() {\r\n\r\n\tint n, u, v;\r\n\tscanf(\"%d\", &n);\r\n\tfor (int i = 1; i < n; i++) {\r\n\t\tscanf(\"%d%d\", &u, &v);\r\n\t\tadd(u - 1, v - 1);\r\n    }\r\n\r\n\tDFS(0, 1);\r\n\tnull(n);\r\n\tmaxD = -1;\r\n\tDFS(maxNode, 1);\r\n\tint maxD1 = maxD;\r\n\tmaxD = -1;\r\n\tmaxNode = -1;\r\n\tfor (int i = 0; i < n; i++) {\r\n\t\tadj[i].clear();\r\n\t}\r\n\tint m;\r\n\tscanf(\"%d\", &m);\r\n\tnull(m);\r\n\tfor (int i = 1; i < m; i++) {\r\n\t\tscanf(\"%d%d\", &u, &v);\r\n\t\tadd(u - 1, v - 1);\r\n\t}\r\n\tDFS(0, 1);\r\n\tnull(m);\r\n\tmaxD = -1;\r\n\tDFS(maxNode, 1);\r\n\tif (maxD1 == -1) maxD1 = 0;\r\n\tif (maxD == -1) maxD = 0;\r\n\tint maxD2 = maxD \/ 2 + maxD1 \/ 2;\r\n\treturn maxD2 + 1;\r\n}\r\nint main()\r\n{\r\n    int t = 1;\r\n    while (t--) cout << diametir() << endl;\r\n    return 0;\r\n}","lang":4}