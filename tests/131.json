{"code":"#include <bits\/stdc++.h>\r\nusing namespace std;\r\n\r\nstruct cell {\r\n\tint x, y;\r\n\tint dis;\r\n\tcell() {}\r\n\tcell(int x, int y, int dis)\r\n\t\t: x(x), y(y), dis(dis)\r\n\t{\r\n\t}\r\n};\r\n\r\nbool isInside(int x, int y, int N)\r\n{\r\n\tif (x >= 1 && x <= N && y >= 1 && y <= N)\r\n\t\treturn true;\r\n\treturn false;\r\n}\r\n\r\nint minStepToReachTarget(int knightPos[], int targetPos[], int N)\r\n{\r\n\tint dx[] = { -2, -1, 1, 2, -2, -1, 1, 2 };\r\n\tint dy[] = { -1, -2, -2, -1, 1, 2, 2, 1 };\r\n\r\n\tqueue<cell> q;\r\n\r\n\tq.push(cell(knightPos[0], knightPos[1], 0));\r\n\r\n\tcell t;\r\n\tint x, y;\r\n\tbool visit[N + 1][N + 1];\r\n\r\n\tfor (int i = 1; i <= N; i++)\r\n\t\tfor (int j = 1; j <= N; j++)\r\n\t\t\tvisit[i][j] = false;\r\n\r\n\tvisit[knightPos[0]][knightPos[1]] = true;\r\n\r\n\twhile (!q.empty()) {\r\n\t\tt = q.front();\r\n\t\tq.pop();\r\n\r\n\t\tif (t.x == targetPos[0] && t.y == targetPos[1])\r\n\t\t\treturn t.dis;\r\n\r\n\t\tfor (int i = 0; i < 8; i++) {\r\n\t\t\tx = t.x + dx[i];\r\n\t\t\ty = t.y + dy[i];\r\n\r\n\t\t\tif (isInside(x, y, N) && !visit[x][y]) {\r\n\t\t\t\tvisit[x][y] = true;\r\n\t\t\t\tq.push(cell(x, y, t.dis + 1));\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\treturn -1;\r\n}\r\n\r\nint main()\r\n{\r\n    int N;\r\n    cin >> N;\r\n\r\n    string name;\r\n    cin >> name;\r\n\r\n    int beginx1, beginy1;\r\n    cin >> beginx1 >> beginy1;\r\n\r\n    int endx2, endy2;\r\n    cin >> endx2 >> endy2;\r\n\r\n    if (name == \"Ot\")\r\n    {\r\n        int knightPos[] = { beginx1, beginy1 };\r\n        int targetPos[] = { endx2, endy2 };\r\n        cout << minStepToReachTarget(knightPos, targetPos, N);\r\n    }\r\n\tif (name == \"Shoh\")\r\n    {\r\n            if (beginx1 == endx2)\r\n                return cout << abs(beginy1 - endy2), 0;\r\n            if (beginy1 == endy2)\r\n                return cout << abs(beginx1 - endx2), 0;\r\n            if (abs(beginx1-endx2) == abs(beginy1-endy2))\r\n                return cout << abs(beginx1-endx2), 0;\r\n\r\n            int a = abs(beginx1 - endx2);\r\n            int b = abs(beginy1 - endy2);\r\n            int c = abs(a - b);\r\n            if (a > b)\r\n                return cout << b + c, 0;\r\n            return cout << a + c, 0;\r\n    }\r\n    if (name == \"Farzin\")\r\n    {\r\n        if (beginx1 == endx2 || beginy1 == endy2)\r\n            return cout << 1, 0;\r\n        if (abs(beginx1 - endx2) == abs(beginy1 - endy2))\r\n            return cout << 1, 0;\r\n        return cout << 2, 0;\r\n    }\r\n    if (name == \"Fil\")\r\n    {\r\n        if (abs(beginx1 - endx2) == abs(beginy1 - endy2))\r\n            return cout << 1, 0;\r\n        if ((beginx1 + endx2) % 2 == (beginy1 + endy2) % 2)\r\n            return cout << 2, 0;\r\n        return cout << -1, 0;            \r\n    }\r\n    if (name == \"Tora\")\r\n    {\r\n        if (beginx1 == endx2 || beginy1 == endy2)\r\n            return cout << 1, 0;\r\n        return cout << 2, 0;\r\n    }\r\n\treturn 0;\r\n}","lang":4}