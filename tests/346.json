{"code":"#include<bits\/stdc++.h>\r\nusing namespace std;\r\ntypedef unsigned long long int ull;\r\n\r\nvector<ull> allPrimes;\r\n\r\nvoid sieve(int n)\r\n{\r\n\tvector<bool> prime(n+1, true);\r\n\r\n\tfor (int p=2; p*p<=n; p++)\r\n\t{\r\n\t\tif (prime[p] == true)\r\n\t\t{\r\n\t\t\tfor (int i=p*2; i<=n; i += p)\r\n\t\t\t\tprime[i] = false;\r\n\t\t}\r\n\t}\r\n\r\n\tfor (int p=2; p<=n; p++)\r\n\t\tif (prime[p])\r\n\t\t\tallPrimes.push_back(p);\r\n}\r\n\r\null factorialDivisors(ull n)\r\n{\r\n\tsieve(n);\r\n\tull result = 1;\r\n\r\n\tfor (int i=0; i < allPrimes.size(); i++)\r\n\t{\r\n\t\tull p = allPrimes[i];\r\n\r\n\t\tull exp = 0;\r\n\t\twhile (p <= n)\r\n\t\t{\r\n\t\t\texp = exp + (n\/p);\r\n\t\t\tp = p*allPrimes[i];\r\n\t\t}\r\n\r\n\t\tresult = (result*(exp+1)) % 1000000007;\r\n\t}\r\n\r\n\treturn result;\r\n}\r\n\r\nint main()\r\n{\r\n  \tint n;\r\n  \tcin >> n;\r\n\tcout << factorialDivisors(n);\r\n\treturn 0;\r\n}","lang":4}