{"code":"#include <bits\/stdc++.h>\r\nusing namespace std;\r\n#define MAX_NODES 200002\r\nint parent[MAX_NODES];\r\nint size_set[MAX_NODES];\r\nvoid make_set(int v) {\r\n\tparent[v] = v;\r\n\tsize_set[v] = 1;\r\n}\r\nint find_set(int v) {\r\n\tif (v == parent[v])\r\n\t\treturn v;\r\n\treturn parent[v]\r\n\t\t= find_set(parent[v]);\r\n}\r\nvoid union_set(int a, int b) {\r\n\ta = find_set(a);\r\n\tb = find_set(b);\r\n\tif (a != b) {\r\n\t\tif (size_set[a] < size_set[b])\r\n\t\t\tswap(a, b);\r\n\t\tparent[b] = a;\r\n\t\tsize_set[a] += size_set[b];\r\n\t}\r\n}\r\nstring check(int a, int b) {\r\n\ta = find_set(a);\r\n\tb = find_set(b);\r\n\treturn (a == b) ? \"1 \" : \"0 \";\r\n}\r\nint main()\r\n{\r\n    ios_base::sync_with_stdio(false);\r\n    cin.tie(NULL);\r\n    cout.tie(NULL);\r\n    \r\n\tint n,m;\r\n\tcin >> n >> m;\r\n\tfor (int i = 1; i <= n; i++)\r\n\tmake_set(i);\r\n\tfor (int i = 1; i <= m; i++) {\r\n        char c;\r\n        int u, v;\r\n        cin >> c >> u >> v;\r\n        if (c == '!') union_set(u, v);\r\n        else cout << check(u, v);\r\n\t}\r\n\treturn 0;\r\n}","lang":4}