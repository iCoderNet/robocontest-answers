{"code":"#include <bits\/stdc++.h>\r\nusing namespace std;\r\n\r\nvoid multiply(long long T[3][3], long long M[3][3])\r\n{\r\n\tlong long a, b, c, d, e, f, g, h, i;\r\n\tlong long mod = 1000000007;\r\n\ta = ((T[0][0] * M[0][0]) % mod +\r\n\t\t(T[0][1] * M[1][0]) % mod +\r\n\t\t(T[0][2] * M[2][0]) % mod) % mod;\r\n\tb = ((T[0][0] * M[0][1]) % mod +\r\n\t\t(T[0][1] * M[1][1]) % mod +\r\n\t\t(T[0][2] * M[2][1]) % mod) % mod;\r\n\tc = ((T[0][0] * M[0][2]) % mod +\r\n\t\t(T[0][1] * M[1][2]) % mod +\r\n\t\t(T[0][2] * M[2][2]) % mod) % mod;\r\n\td = ((T[1][0] * M[0][0]) % mod +\r\n\t\t(T[1][1] * M[1][0]) % mod +\r\n\t\t(T[1][2] * M[2][0]) % mod) % mod;\r\n\te = ((T[1][0] * M[0][1]) % mod +\r\n\t\t(T[1][1] * M[1][1]) % mod +\r\n\t\t(T[1][2] * M[2][1]) % mod) % mod;\r\n\tf = ((T[1][0] * M[0][2]) % mod +\r\n\t\t(T[1][1] * M[1][2]) % mod +\r\n\t\t(T[1][2] * M[2][2]) % mod) % mod;\r\n\tg = ((T[2][0] * M[0][0]) % mod +\r\n\t\t(T[2][1] * M[1][0]) % mod +\r\n\t\t(T[2][2] * M[2][0]) % mod) % mod;\r\n\th = ((T[2][0] * M[0][1]) % mod +\r\n\t\t(T[2][1] * M[1][1]) % mod +\r\n\t\t(T[2][2] * M[2][1]) % mod) % mod;\r\n\ti = ((T[2][0] * M[0][2]) % mod +\r\n\t\t(T[2][1] * M[1][2]) % mod +\r\n\t\t(T[2][2] * M[2][2]) % mod) % mod;\r\n\tT[0][0] = a;\r\n\tT[0][1] = b;\r\n\tT[0][2] = c;\r\n\tT[1][0] = d;\r\n\tT[1][1] = e;\r\n\tT[1][2] = f;\r\n\tT[2][0] = g;\r\n\tT[2][1] = h;\r\n\tT[2][2] = i;\r\n}\r\n\r\nvoid power(long long T[3][3], long long n)\r\n{\r\n\tif (n == 0 || n == 1)\r\n\t\treturn;\r\n\tlong long M[3][3] = {{ 1, 1, 1 },\r\n\t\t\t\t{ 1, 0, 0 },\r\n\t\t\t\t{ 0, 1, 0 }};\r\n\r\n\tpower(T, n \/ 2);\r\n\r\n\tmultiply(T, T);\r\n\r\n\tif (n % 2)\r\n\t\tmultiply(T, M);\r\n}\r\nlong long tribonacci(long long n)\r\n{\r\n\tlong long T[3][3] = {{ 1, 1, 1 },\r\n\t\t\t\t{ 1, 0, 0 },\r\n\t\t\t\t{ 0, 1, 0 }};\r\n\r\n\tif (n == 0 || n == 1)\r\n\t\treturn 0;\r\n\telse\r\n\t\tpower(T, n - 2);\r\n\r\n\treturn T[0][0];\r\n}\r\n\r\nint main()\r\n{\r\n\tlong long t;\r\n\tscanf(\"%lld\", &t);\r\n\twhile (t--) {\r\n        long long n;\r\n        scanf(\"%lld\", &n);\r\n        printf(\"%lld\\n\", tribonacci(n));\r\n\t}\r\n\r\n\treturn 0;\r\n}","lang":4}