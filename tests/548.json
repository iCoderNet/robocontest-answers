{"code":"#include <iostream>\r\n#include <vector>\r\n#define L 1000\r\n#define K 1000000\r\nusing namespace std;\r\n\r\nvector<int>adj[K];\r\nbool M[L][L], vis[K];\r\nint N[L][L];\r\n\r\nvoid DFS(int u) {\r\n    vis[u] = true;\r\n    for (auto v : adj[u])\r\n        if (vis[v] == false)\r\n            DFS(v);\r\n}\r\n\r\nvoid add(int u, int v) {\r\n  adj[u].push_back(v);\r\n  adj[v].push_back(u);\r\n}\r\n\r\nint solve() {\r\n  int n, m, z = 0;\r\n  char c;\r\n  cin >> n >> m;\r\n\r\n  for (int i = 0; i < n; i++) {\r\n    for (int j =0; j < m; j++) {\r\n        cin >> c;\r\n        if (c == '.') {\r\n            M[i][j] = 1;\r\n        }\r\n        else {\r\n            M[i][j] = 0;\r\n        }\r\n        N[i][j] = z++;\r\n    }\r\n  }\r\n\r\n  for (int i = 0; i < n; i++) {\r\n    for (int j =0; j < m; j++) {\r\n        if (M[i][j]) {\r\n            if (i+1 < n && M[i+1][j]) {\r\n                add(N[i][j], N[i+1][j]);\r\n            }\r\n            if (j+1 < m && M[i][j+1]) {\r\n                add(N[i][j], N[i][j+1]);\r\n            }\r\n        }\r\n        else {\r\n            vis[N[i][j]] = true;\r\n        }\r\n    }\r\n  }\r\n\r\n  int cnt = 0;\r\n  for (int i = 0; i < n*m; i++) {\r\n    if (vis[i] == false) {\r\n        DFS(i);\r\n        cnt++;\r\n    }\r\n  }\r\n  return cnt;\r\n}\r\n\r\nint main() {\r\n    ios_base::sync_with_stdio(false);\r\n    cin.tie(NULL);\r\n    cout.tie(NULL);\r\n    int t = 1;\r\n    while (t--) cout << solve() << endl;\r\n    return 0;\r\n}","lang":4}