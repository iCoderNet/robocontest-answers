{"code":"from math import *\r\ndef dfs(n):\r\n    if n == 1:\r\n        return 1\r\n    if n == 2:\r\n        return 3\r\n    d = int(log(n, 10))\r\n    a = [0]*(d + 2)\r\n    a[0] = 0\r\n    a[1] = 45\r\n    for i in range(2, d + 1):\r\n        a[i] = a[i - 1] * 10 + 45 * int(ceil(pow(10, i - 1)))\r\n    return solve(n, a)\r\ndef solve(n, a):\r\n    if (n < 10):\r\n        return (n * (n + 1)) \/\/ 2\r\n    d = int(log(n,10))\r\n    p = int(ceil(pow(10, d)))\r\n    m = n \/\/ p\r\n    return (m * a[d] + (m * (m - 1) \/\/ 2) * p + m * (1 + n % p) + solve(n % p, a))  \r\nn, m = map(int,input().split())\r\nprint(dfs(m) if n == 1 else dfs(m) - dfs(n-1))","lang":2}