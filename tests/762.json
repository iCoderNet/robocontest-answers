{"code":"\/*\r\n\u2588\u2588    \u2588\u2588  \u2588\u2588\u2588\u2588\u2588\u2588  \u2588\u2588\u2588\u2588\u2588\u2588  \u2588\u2588   \u2588\u2588\r\n\u2588\u2588\u2588  \u2588\u2588\u2588  \u2588\u2588        \u2588\u2588     \u2588\u2588 \u2588\u2588\r\n\u2588\u2588 \u2588\u2588 \u2588\u2588  \u2588\u2588        \u2588\u2588      \u2588\u2588\r\n\u2588\u2588    \u2588\u2588  \u2588\u2588        \u2588\u2588      \u2588\u2588\r\n\r\n  \u2588\u2588\u2588\u2588  \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588     \u2588\u2588      \u2588\u2588   \u2588\u2588  \u2588\u2588  \u2588\u2588  \u2588\u2588\u2588\u2588\u2588\u2588  \u2588\u2588   \u2588\u2588\r\n \u2588\u2588        \u2588\u2588       \u2588\u2588\u2588\u2588     \u2588\u2588   \u2588\u2588  \u2588\u2588 \u2588\u2588   \u2588\u2588      \u2588\u2588   \u2588\u2588\r\n \u2588\u2588        \u2588\u2588      \u2588\u2588  \u2588\u2588    \u2588\u2588\u2588\u2588\u2588\u2588\u2588  \u2588\u2588\u2588\u2588    \u2588\u2588\u2588\u2588    \u2588\u2588\u2588\u2588\u2588\u2588\u2588\r\n \u2588\u2588        \u2588\u2588     \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588   \u2588\u2588   \u2588\u2588  \u2588\u2588 \u2588\u2588   \u2588\u2588      \u2588\u2588   \u2588\u2588\r\n  \u2588\u2588\u2588\u2588     \u2588\u2588    \u2588\u2588\u2588    \u2588\u2588\u2588  \u2588\u2588   \u2588\u2588  \u2588\u2588  \u2588\u2588  \u2588\u2588\u2588\u2588\u2588\u2588  \u2588\u2588   \u2588\u2588\r\n*\/\r\n#include<bits\/stdc++.h>\r\nusing namespace std;\r\n\r\n#define int long long\r\n#define endl '\\n'\r\n\r\nint cur = 1, n, q;\r\nvector<int> ver;\r\nconst int mxN = 2e6;\r\nstruct node {\r\n    int left, right, sum;\r\n} seg[mxN*40];\r\n\r\nvoid update(int &root, int idx, int val, int l = 0, int h = n-1) {\r\n    seg[cur].left = seg[root].left;\r\n    seg[cur].right = seg[root].right;\r\n    seg[cur].sum = seg[root].sum + val;\r\n    root = cur; cur++;\r\n    int mid = (l+h)\/2;\r\n    if (l == h)\r\n        return;\r\n    if (idx <= mid)\r\n        update(seg[root].left, idx, val, l, mid);\r\n    else\r\n        update(seg[root].right, idx, val, mid+1, h);\r\n}\r\n\r\nint query(int root, int a, int b, int l = 0, int h = n-1) {\r\n    if (a<=l && h<=b)\r\n        return seg[root].sum;\r\n    int mid = (l+h)\/2;\r\n    return (a<=mid?query(seg[root].left, a, b, l, mid):0) +\r\n           (mid<b?query(seg[root].right, a, b, mid+1, h):0);\r\n}\r\nsigned main(){\r\n    ios_base::sync_with_stdio(false);cin.tie(0);cout.tie(0);\r\n    #ifdef LOCAL\r\n    #endif\r\n    \r\n    cin>>n>>q;\r\n    ver.push_back(0);\r\n    for (int i = 0; i < n; i++) {\r\n        int x; cin>>x;\r\n        update(ver[0], i, x);\r\n    }\r\n    while(q--) {\r\n        int ch; cin>>ch;\r\n        if (ch == 1) {\r\n            int k, a, x; cin>>k>>a>>x;\r\n            k--, a--;\r\n            update(ver[k], a, x - query(ver[k], a, a));\r\n        }\r\n        else if (ch == 2) {\r\n            int k, a, b; cin>>k>>a>>b;\r\n            k--, a--, b--;\r\n            cout<<query(ver[k], a, b)<<endl;\r\n        }\r\n        else {\r\n            int k; cin>>k;\r\n            ver.push_back(ver[k-1]);\r\n        }\r\n    }\r\n\r\n}","lang":4}