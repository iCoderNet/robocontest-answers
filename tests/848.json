{"code":"#include <bits\/stdc++.h>\r\nusing namespace std;\r\nint u = 1000;\r\nint dppp[10001];\r\n#define mx 2222222\r\n#define mxx 333333333333\r\nvoid recalc(int x, int y, vector <vector <int>> &a) { \r\n    if (a[x - 1][y] > a[x][y] + 1 && a[x - 1][y] !=u) { \r\n        a[x - 1][y] = a[x][y] + 1;\r\n    }\r\n    if (a[x - 2][y] > a[x][y] + 2 && a[x - 1][y] != u) {\r\n        a[x - 2][y] = a[x][y] + 2;\r\n        recalc(x - 2, y, a);\r\n    }\r\n    if (a[x][y+1] > a[x][y] + 1 && a[x][y+1] != u) { \r\n        a[x][y+1] = a[x][y] + 1;\r\n    }\r\n    if (a[x][y+2] > a[x][y] + 2 && a[x][y+2] != u) {\r\n        a[x][y+2] = a[x][y] + 2;\r\n        recalc(x, y + 2, a);\r\n    }\r\n    if (a[x + 1][y] > a[x][y] + 1 && a[x + 1][y] != u) {\r\n        a[x + 1][y] = a[x][y] + 1;\r\n    }\r\n    if (a[x + 2][y] > a[x][y] + 2 && a[x + 1][y] != u) {\r\n        a[x + 2][y] = a[x][y] + 2;\r\n        recalc(x + 2, y, a);\r\n    }\r\n    if (a[x][y - 1] > a[x][y] + 1 && a[x][y - 1] != u) { \r\n        a[x][y - 1] = a[x][y] + 1;\r\n  \r\n    }\r\n    if (a[x][y - 2] > a[x][y] + 2 && a[x][y - 1] != u) {\r\n        a[x][y - 2] = a[x][y] + 2;\r\n        recalc(x, y - 2, a);\r\n    }\r\n    return;\r\n}\r\nint main() {\r\n    string s = \"\";\r\n    cin >> s;\r\n    int N = 0, E = 0, S = 0, W = 0;\r\n    for (int z = 0; z < s.size(); z++) {\r\n        switch (s[z]) {\r\n        case 'N':\r\n            N++;\r\n            break;\r\n        case 'E':\r\n            E++;\r\n            break;\r\n        case 'S':\r\n            S++;\r\n            break;\r\n        case 'W':\r\n            W++;\r\n            break;\r\n        }\r\n    }\r\n    int SN = (N + S) * 2 + 6;\r\n    int EW = (W + E) * 2 + 6;\r\n    vector <vector<int>> a(SN, vector<int>(EW, u));\r\n    int X = N*2+3, Y = W*2+3;  \r\n    int l = 0;\r\n    a[X][Y] = l;  \r\n    for (int z = 0; z < s.size(); z++) { \r\n        switch (s[z]) {\r\n        case 'N': \r\n            X--;\r\n            l++;\r\n            if (a[X][Y] == u) {\r\n                a[X][Y] = l;\r\n            }\r\n            X--;\r\n            l++;\r\n            if (a[X][Y] == u) {\r\n                a[X][Y] = l;\r\n            }\r\n            break;\r\n        case 'E': \r\n            Y++;\r\n            l++;\r\n            if (a[X][Y] == u) {\r\n                a[X][Y] = l;\r\n            }\r\n            Y++;\r\n            l++;\r\n            if (a[X][Y] == u) {\r\n                a[X][Y] = l;\r\n            }\r\n            break;\r\n        case 'S':\r\n            X++;\r\n            l++;\r\n            if (a[X][Y] == u) {\r\n                a[X][Y] = l;\r\n            }\r\n            X++;\r\n            l++;\r\n            if (a[X][Y] == u) {\r\n                a[X][Y] = l;\r\n            }\r\n            break;\r\n        case 'W': \r\n            Y--;\r\n            l++;\r\n            if (a[X][Y] == u) {\r\n                a[X][Y] = l; \r\n            }\r\n            Y--;\r\n            l++;\r\n            if (a[X][Y] == u) {\r\n                a[X][Y] = l; \r\n            }\r\n            break;\r\n        }\r\n    }\r\n    recalc(N * 2 + 3, W * 2 + 3, a);\r\n    string bk = \"\";\r\n    while (a[X][Y] > 0) {\r\n        char step = 'N';\r\n        int minL = a[X][Y];\r\n        if (minL > a[X - 2][Y] && a[X - 1][Y] != u) { \r\n            step = 'N';\r\n            minL = a[X - 2][Y];\r\n        }\r\n        if (minL > a[X][Y + 2] && a[X][Y + 1] != u) { \r\n            step = 'E';\r\n\r\n\t\tminL = a[X][Y + 2];\r\n        }\r\n        if (minL > a[X+2][Y] && a[X + 1][Y] !=u) {\r\n            step = 'S';\r\n            minL = a[X+2][Y];\r\n        }\r\n        if (minL > a[X][Y - 2] && a[X][Y - 1] !=u) { \r\n            step = 'W';\r\n            minL = a[X][Y - 2];\r\n        }\r\n        bk += step; \r\n        switch (step) { \r\n        case 'N':\r\n            X -= 2;\r\n            break;\r\n        case 'E':\r\n            Y += 2;\r\n            break;\r\n        case 'S':\r\n            X += 2;\r\n            break;\r\n        case 'W':\r\n            Y -= 2;\r\n            break;\r\n        }\r\n    }\r\n    cout << bk;\r\n    return 0;\r\n}","lang":4}