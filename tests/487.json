{"code":"#include <bits\/stdc++.h>\r\n#define INF 55\r\n#define MAX 125005\r\nusing namespace std;\r\n  \r\nint vis[MAX];\r\nvector<int>adj[MAX], arr;\r\n  \r\nvoid add(int u, int v) {\r\n    adj[u].push_back(v);\r\n    adj[v].push_back(u);\r\n}\r\n \r\nvoid addd(int u, int v) {\r\n    adj[u].push_back(v);\r\n}\r\n  \r\nint solve() {\r\n    int n, m, h, w;\r\n    cin >> h >> n >> m >> w;\r\n    int M[h][n][m];\r\n    int N[h][n][m];\r\n    int node = 0, A, B;\r\n    A = B = -1;\r\n    for (int t = 0; t < h; t++) {\r\n        string x;\r\n        for (int i = 0; i < n; i++) {\r\n            cin >> x;\r\n            for (int j = 0; j < x.size(); j++) {\r\n                if (x[j] == 'o') {\r\n                    M[t][i][j] = 0;\r\n                }\r\n                else\r\n                if (x[j] == '.') {\r\n                    M[t][i][j] = 1;\r\n                }\r\n                else\r\n                if (x[j] == '1') {\r\n                    M[t][i][j] = 1;\r\n                    A = node;\r\n                }\r\n                else {\r\n                    M[t][i][j] = 1;\r\n                    B = node;\r\n                }\r\n                N[t][i][j] = node++;\r\n            }\r\n        }\r\n    }\r\n    for (int i = 0; i < h; i++) {\r\n        for (int j = 0; j < n; j++) {\r\n            for (int k = 0; k < m; k++) {\r\n                if (M[i][j][k] == 1) {\r\n                    if (j > 0) {\r\n                        if (M[i][j-1][k] == 1) {\r\n                            add(N[i][j][k], N[i][j-1][k]);\r\n                        }\r\n                    }\r\n                    if (k > 0) {\r\n                        if (M[i][j][k-1] == 1) {\r\n                            add(N[i][j][k], N[i][j][k-1]);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    for (int i = 0; i < h-1; i++) {\r\n        for (int j = 0; j < n; j++) {\r\n            for (int k = 0; k < m; k++) {\r\n                if (M[i][j][k] == M[i+1][j][k] && M[i][j][k]) {\r\n                    addd(N[i][j][k], N[i+1][j][k]);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    vis[A]++;\r\n    arr.push_back(A);\r\n    for (int i = 0; i < arr.size(); i++) {\r\n        int node = arr[i];\r\n        for (auto x : adj[node]) {\r\n            if (vis[x] == 0) {\r\n                vis[x] = vis[node] + 1;\r\n                arr.push_back(x);\r\n            }\r\n        }\r\n    }\r\n  \tif (vis[B] == 0) return -1;\r\n    return w * (vis[B] - 1);\r\n}\r\n  \r\nint main() {\r\n    int t = 1;\r\n    while (t--) cout << solve() << endl;\r\n    return 0;\r\n}","lang":4}