{"code":"#include <bits\/stdc++.h>\r\n#define INF 600000\r\nusing namespace std;\r\nbool P[INF];\r\nint arr[INF];\r\nlist < int > adj1[INF];\r\nlist < int > adj2[INF];\r\nstring solve()\r\n{\r\n    int n, v;\r\n    scanf(\"%d\", &n);\r\n    int root = -1;\r\n    for (int i = 1; i <= n; i++) {\r\n        scanf(\"%d\", &v);\r\n        if (v != -1) {\r\n            adj1[v].push_back(i);\r\n            adj2[v].push_back(i);\r\n            adj2[i].push_back(v);\r\n        }\r\n        else {\r\n            root = i;\r\n        }\r\n    }\r\n    for (int i = 1; i <= n; i++) {\r\n        scanf(\"%d\", &v);\r\n        arr[i] = v;\r\n    }\r\n    list < int > mp1;\r\n    mp1.push_back(root);\r\n    bool key = true;\r\n    while (key == true) {\r\n        key = false;\r\n        list < int > mp2;\r\n        set < int > st;\r\n        int m = 0;\r\n        for (auto it=mp1.begin(); it!=mp1.end(); it++) {\r\n            st.insert(arr[*it]);\r\n            int mm = st.size();\r\n            if (m == mm)\r\n                return \"bad\";\r\n            m = mm;\r\n            for (auto u : adj2[*it]) {\r\n                if (arr[*it] == arr[u]) return \"bad\";\r\n            }\r\n            if (!P[*it]&&adj1[*it].size()) {\r\n                key = true;\r\n                for (auto u : adj1[*it]) {\r\n                    mp2.push_back(u);\r\n                }\r\n            }\r\n            P[*it] = true;\r\n        }\r\n        st.clear();\r\n        mp1.swap(mp2);\r\n        mp2.clear();\r\n    }\r\n    return \"good\";\r\n}\r\nint main()\r\n{\r\n    ios_base::sync_with_stdio(false);\r\n    cin.tie(NULL);\r\n    int t = 1;\r\n    while (t--) {\r\n        cout << solve() << endl;\r\n    }\r\n    return 0;\r\n}","lang":4}