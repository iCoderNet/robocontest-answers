{"code":"#include<bits\/stdc++.h>\r\nusing namespace std;\r\n\r\n#define MAX 6666666\r\npriority_queue<pair<int, int>>q;\r\n\r\nint mx[MAX], ls[MAX];\r\nint rs[MAX], tg[MAX];\r\nint pre = -1, sz, rt;\r\n\r\nvoid pushup(int k) {\r\n    mx[k] = max(mx[ls[k]], mx[rs[k]]) + tg[k];\r\n}\r\n\r\nvoid upd(int &k, int l, int r, int x, int v) {\r\n\r\n    if (k == 0) k = ++sz;\r\n    if (l == r) {\r\n        tg[k] = mx[k] = v;\r\n        return ;\r\n    }\r\n    int mid = (l + r) \/ 2;\r\n    if (x <= mid)\r\n        upd(ls[k], l, mid, x, v);\r\n    else\r\n        upd(rs[k], mid + 1, r, x, v);\r\n    pushup(k);\r\n}\r\n\r\nvoid add(int &k, int l, int r, int x, int y) {\r\n    if (k == 0 || y < l || r < x) return;\r\n    if (x <= l && r <= y){\r\n        mx[k]++;\r\n        tg[k]++;\r\n        return;\r\n    }\r\n\r\n    int mid = (l + r) \/ 2;\r\n\r\n    add(ls[k], l, mid, x, y);\r\n    add(rs[k], mid + 1, r, x, y);\r\n\r\n    pushup(k);\r\n}\r\nint ask(int &k, int l, int r, int x, int y) {\r\n\r\n    if (k == 0 || y < l || r < x) return 0;\r\n    if (x <= l && r <= y) return mx[k];\r\n\r\n    int mid = (l + r) \/ 2;\r\n    int ans = ask(ls[k], l, mid, x, y);\r\n\r\n    ans = max(ans, ask(rs[k], mid+1, r, x, y));\r\n    return ans + tg[k];\r\n}\r\n\r\nint main()  {\r\n\r\n    ios_base::sync_with_stdio(0);\r\n    cin.tie(NULL);\r\n    cout.tie(NULL);\r\n\r\n    int n, k;\r\n    cin >> n >> k;\r\n\r\n    for (int i = 1; i <= n; i++){\r\n        int l, r;\r\n        cin >> l >> r;\r\n        l = max(0, l);\r\n        q.push(make_pair(-r, -l));\r\n        q.push(make_pair(-l, +1));\r\n    }\r\n    while (!q.empty()){\r\n\r\n        int l = -q.top().second;\r\n        int r = -q.top().first ;\r\n        q.pop();\r\n\r\n        if (l >= 0) add(rt, 0, 1e9, l, r);\r\n        else{\r\n            if (r == pre) {\r\n                continue;\r\n            }\r\n\r\n            int u = ask(rt, 0, 1e9, pre, pre);\r\n            int v = ask(rt, 0, 1e9, 0, r - k);\r\n\r\n            if (l == -1 || u < v) {\r\n                pre = r;\r\n                upd(rt, 0, 1e9, r, v);\r\n                if (r + k <= 1e9) {\r\n                    q.push(make_pair(-r - k, 2));\r\n                }\r\n            }\r\n        }\r\n    }\r\n    cout << mx[1] << endl;\r\n\r\n    return 0;\r\n}","lang":4}