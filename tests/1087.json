{"code":"#include<bits\/stdc++.h>\r\nusing namespace std;\r\n#define mx 500\r\nvector < int > adj[mx*mx];\r\nbool p[mx*mx];\r\n\r\nvoid dfs(int a) {\r\n    p[a] = 1;\r\n    for (auto b : adj[a]) {\r\n        if (p[b] == 0) {\r\n            dfs(b);\r\n        }\r\n    }\r\n}\r\n\r\nint32_t main()\r\n{\r\n    int n;\r\n    cin >> n;\r\n\r\n    int a, b, u, v;\r\n    cin >> u >> v;\r\n\r\n    a = (u-1) * n + v-1;\r\n    cin >> u >> v;\r\n    b = (u-1) * n + v-1;\r\n\r\n    int mat[n][n];\r\n    for (int i = 0; i < n; i++) {\r\n        for (int j = 0; j < n; j++) {\r\n            cin >> mat[i][j];\r\n        }\r\n    }\r\n\r\n    for (int i = 0; i < n; i++) {\r\n        for (int j = 0; j < n; j++) {\r\n            if (mat[i][j] == 0) {\r\n                if (i+1<n && mat[i+1][j] == 0) {\r\n                    adj[n*i+j].push_back(n*(i+1)+j);\r\n                    adj[n*(i+1)+j].push_back(n*i+j);\r\n                }\r\n                if (j+1<n && mat[i][j+1] == 0) {\r\n                    adj[i*n+j].push_back(i*n+j+1);\r\n                    adj[i*n+j+1].push_back(i*n+j);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    dfs(a);\r\n    cout << (p[b] == 1 ? \"Yes\" : \"No\") << endl;\r\n\r\n    return 0;\r\n}","lang":4}